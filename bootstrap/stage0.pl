% Generated by extoltoprolog
:-(set_prolog_flag(singleton_warning,off)).
:-(discontiguous(/(test,1))).
:-(initialization(;(main,','(write('error: unexpected failure in main'),','(nl,halt(1)))))).
test(:-(disabled,t(unit_tests_disabled))).
:-(unify(A,A),true).
:-(+(A,B,C),','(true,','(=('.'(A,'.'(B,'.'(C,[]))),'.'(D,'.'(E,'.'(F,[])))),is(F,+(D,E))))).
:-(-(A,B,C),','(true,','(=('.'(A,'.'(B,'.'(C,[]))),'.'(D,'.'(E,'.'(F,[])))),is(F,-(D,E))))).
:-(log(A),;(','(environ('EXTOL_TRACE',B),','(!,t(A))),true)).
:-(t(A),','(write('trace: '),','(ti,','(write_term(A,'.'(quoted(true),'.'(max_depth(7),[]))),nl)))).
:-(t(A,B,C),','(','(','(write('trace: '),','(ti,','(write_term(A,'.'(quoted(true),'.'(max_depth(7),[]))),write(', at: ')))),=(B,D)),','(peek(E,D,F),','(','(','(pretty_init(E,G),','(write(G),nl)),=(F,H)),','(!,=(H,C)))))).
:-(pretty_init(A,B),','(copy_term(A,C),','(;(','(length(D,32),append(D,E,C)),=(D,C)),','(!,','(prep_chars(D,F,[]),','(length(F,G),','(;(','(<(G,10),','(!,append(F,'.'(60,'.'(101,'.'(111,'.'(102,'.'(62,[]))))),H))),=(H,F)),atom_codes(B,H)))))))).
:-(prep_chars([],A,B),=(A,B)).
:-(prep_chars('.'(A,B),C,D),','(prep_char(A,C,E),prep_chars(B,E,D))).
:-(prep_char(A,B,C),','(','(var(A),=(B,D)),','(','(!,=(D,E)),append('.'(60,'.'(63,'.'(62,[]))),C,E)))).
:-(prep_char(10,A,B),','(','(!,=(A,C)),append('.'(60,'.'(110,'.'(108,'.'(62,[])))),B,C))).
:-(prep_char(13,A,B),','(','(!,=(A,C)),append('.'(60,'.'(99,'.'(114,'.'(62,[])))),B,C))).
:-(prep_char(9,A,B),','(','(!,=(A,C)),append('.'(60,'.'(116,'.'(97,'.'(98,'.'(62,[]))))),B,C))).
:-(prep_char(60,A,B),','(','(!,=(A,C)),append('.'(60,'.'(108,'.'(116,'.'(62,[])))),B,C))).
:-(prep_char(A,B,C),','(','(','(;(','(=('.'(D,[]),'.'(integer(A),[])),;(','(call(D),','(!,false)),true)),;(<(A,32),>(A,126))),','(!,','(open_output_codes_stream(E),','(write(E,A),close_output_codes_stream(E,F))))),=(B,G)),','(append('.'(60,[]),H,G),','(dcg_call(F,H,I),','(append('.'(62,[]),J,I),','(!,=(J,C))))))).
:-(prep_char(A,B,C),append('.'(A,[]),C,B)).
:-(tf(A),','(t(A),fail)).
:-(tc(A),','(;(','(=('.'(B,[]),'.'(t(failed(A)),[])),true),','(=('.'(C,[]),'.'(t(failed(A)),[])),','(call(C),fail))),','(t(enter(A)),','(','(=('.'(D,[]),'.'(A,[])),','(g_read(tindent,E),','(is(F,+(E,1)),','(g_assignb(tindent,F),','(call(D),g_assignb(tindent,E)))))),','(;(','(=('.'(G,[]),'.'(t(redo(A)),[])),true),','(=('.'(H,[]),'.'(t(redo(A)),[])),','(call(H),fail))),t(exit(A))))))).
:-(tc(A,B,C),','(undo(t(failed(A)),B,D),','(t(enter(A),D,E),','(','(=('.'(F,'.'(G,'.'(H,[]))),'.'(A,'.'(E,'.'(I,[])))),','(g_read(tindent,J),','(is(K,+(J,1)),','(g_assignb(tindent,K),','(dcg_call(F,G,H),g_assignb(tindent,J)))))),','(undo(t(redo(A)),I,L),t(exit(A),L,C)))))).
:-(tc(A,B,C,D),','(undo(t(failed(A)),C,E),','(t(enter(A),E,F),','(','(=('.'(G,'.'(H,'.'(I,'.'(J,[])))),'.'(A,'.'(B,'.'(F,'.'(K,[]))))),','(g_read(tindent,L),','(is(M,+(L,1)),','(g_assignb(tindent,M),','(=...(G,N),','(append(N,'.'(H,[]),O),','(=...(P,O),','(dcg_call(P,I,J),g_assignb(tindent,L))))))))),','(undo(t(redo(A)),K,Q),t(exit(A),Q,D)))))).
:-(ti,','(=(A,'.'(124,'.'(32,'.'(46,'.'(32,'.'(46,'.'(32,A))))))),','(g_read(tindent,B),','(is(C,*(B,2)),','(length(D,C),','(append(D,E,A),','(atom_codes(F,D),write(F)))))))).
:-(ticall(A),','(g_read(tindent,B),','(is(C,+(B,1)),','(g_assignb(tindent,C),','(call(A),g_assignb(tindent,B)))))).
:-(ticall(A,B,C),','(g_read(tindent,D),','(is(E,+(D,1)),','(g_assignb(tindent,E),','(dcg_call(A,B,C),g_assignb(tindent,D)))))).
:-(ticall(A,B,C,D),','(g_read(tindent,E),','(is(F,+(E,1)),','(g_assignb(tindent,F),','(=...(A,G),','(append(G,'.'(B,[]),H),','(=...(I,H),','(dcg_call(I,C,D),g_assignb(tindent,E))))))))).
:-(write_trace_line(A),','(write('at: '),','(write_term(A,'.'(numbervars(false),'.'(namevars(false),'.'(max_depth(6),[])))),nl))).
:-(throw_with_trace(traced_exception(A,B),C),','(!,throw(traced_exception(A,'.'(C,B))))).
:-(throw_with_trace(A,B),throw(traced_exception(A,'.'(B,[])))).
:-(print_exception(traced_exception(A,B)),','(!,','(print_exception(A),','(reverse(B,C),maplist(write_trace_line,C))))).
:-(print_exception(A),','(write_term(A,'.'(numbervars(false),'.'(namevars(false),'.'(max_depth(7),[])))),nl)).
:-(sf(A),catch(A,B,throw_with_trace(B,A))).
:-(sf(A,B),','(=('.'(C,[]),'.'(call(A,B),[])),catch(C,D,throw_with_trace(D,C)))).
:-(sf(A,B,C),','(=('.'(D,[]),'.'(call(A,B,C),[])),catch(D,E,throw_with_trace(E,D)))).
:-(test_sf1,','(=('.'(A,[]),'.'(test_sf2,[])),catch(A,B,throw_with_trace(B,A)))).
:-(test_sf2,throw(boop)).
:-(many(A,'.'(B,C),D,E),','(call(A,B,D,F),','(many(A,C,F,G),','(!,=(G,E))))).
:-(many(A,[],B,C),=(B,C)).
:-(many(A,B,C),','(call(A,B,D),','(many(A,D,E),','(!,=(E,C))))).
:-(many(A,B,C),','(true,=(B,C))).
:-(many1(A,B,C,D),','(assert(','(xtl_callable(A),list_or_partial_list(B))),','('__contract_free_many1'(A,B,C,D),assert(list(B))))).
:-('__contract_free_many1'(A,'.'(B,C),D,E),','(call(A,B,D,F),','(','(!,=(F,G)),many(A,C,G,E)))).
:-(eof(A,B),peek([],A,B)).
:-(peek(A,B,C),','(assert(','(list_or_partial_list(B),','(list_or_partial_list(C),list_or_partial_list(A)))),','('__contract_free_peek'(A,B,C),assert(true)))).
:-('__contract_free_peek'(A,A,A),true).
:-(alpha(A,B,C),','(assert(true),','('__contract_free_alpha'(A,B,C),assert(number(A))))).
:-('__contract_free_alpha'(A,B,C),','(append('.'(A,[]),D,B),','(member(A,'.'(97,'.'(98,'.'(99,'.'(100,'.'(101,'.'(102,'.'(103,'.'(104,'.'(105,'.'(106,'.'(107,'.'(108,'.'(109,'.'(110,'.'(111,'.'(112,'.'(113,'.'(114,'.'(115,'.'(116,'.'(117,'.'(118,'.'(119,'.'(120,'.'(121,'.'(122,'.'(65,'.'(66,'.'(67,'.'(68,'.'(69,'.'(70,'.'(71,'.'(72,'.'(73,'.'(74,'.'(75,'.'(76,'.'(77,'.'(78,'.'(79,'.'(80,'.'(81,'.'(82,'.'(83,'.'(84,'.'(85,'.'(86,'.'(87,'.'(88,'.'(89,'.'(90,[]))))))))))))))))))))))))))))))))))))))))))))))))))))),=(D,C)))).
:-(digit(A,B,C),','(assert(true),','('__contract_free_digit'(A,B,C),assert(number(A))))).
:-('__contract_free_digit'(A,B,C),','(append('.'(D,[]),E,B),','(member(-(D,A),'.'(-(48,0),'.'(-(49,1),'.'(-(50,2),'.'(-(51,3),'.'(-(52,4),'.'(-(53,5),'.'(-(54,6),'.'(-(55,7),'.'(-(56,8),'.'(-(57,9),[]))))))))))),=(E,C)))).
:-(dcg_call(A,B,C),','(var(A),','(!,fail))).
:-(dcg_call([],A,A),!).
:-(dcg_call('.'(A,B),C,D),','(!,','(=(C,'.'(A,E)),dcg_call(B,E,D)))).
:-(dcg_call(','(A,B),C,D),','(!,','(dcg_call(A,C,E),dcg_call(B,E,D)))).
:-(dcg_call(;(A,B),C,D),','(!,;(dcg_call(A,C,D),dcg_call(B,C,D)))).
:-(dcg_call({}(A),B,B),','(!,call(A))).
:-(dcg_call(A,B,C),','(!,call(A,B,C))).
:-(require(A,B,C),;(','(dcg_call(A,B,C),!),','(pretty_init(B,D),throw(parse_failed(A,D))))).
:-(must(A),','(;(','(=('.'(B,[]),'.'(throw(failed(A)),[])),true),','(=('.'(C,[]),'.'(throw(failed(A)),[])),','(call(C),fail))),call(A))).
:-(must(A,B),','(;(','(=('.'(C,[]),'.'(throw(failed(call(A,B))),[])),true),','(=('.'(D,[]),'.'(throw(failed(call(A,B))),[])),','(call(D),fail))),call(A,B))).
:-(must(A,B,C),','(;(','(=('.'(D,[]),'.'(throw(failed(call(A,B,C))),[])),true),','(=('.'(E,[]),'.'(throw(failed(call(A,B,C))),[])),','(call(E),fail))),call(A,B,C))).
:-(must(A,B,C,D),','(;(','(=('.'(E,[]),'.'(throw(failed(call(A,B,C,D))),[])),true),','(=('.'(F,[]),'.'(throw(failed(call(A,B,C,D))),[])),','(call(F),fail))),call(A,B,C,D))).
:-(try(A,B,C),','(catch(dcg_call(A,B,C),parse_failed(D,E),=(F,true)),','(!,=(F,false)))).
:-(add_digit(A,B,C),','(member(B,'.'(0,'.'(1,'.'(2,'.'(3,'.'(4,'.'(5,'.'(6,'.'(7,'.'(8,'.'(9,[]))))))))))),','(;(','(var(A),is(A,div(C,B))),true),is(C,+(*(A,10),B))))).
:-(undo(A),true).
:-(undo(A),','(call(A),fail)).
:-(undo(A,B,C),','(true,=(B,C))).
:-(undo(A,B,C),','(dcg_call(A,B,D),','(fail,=(D,C)))).
:-(byte(A),','(number(A),','(>=(A,0),<(A,256)))).
:-(bytes(A),','(ground(A),maplist(byte,A))).
:-(assert(','(A,B)),','(!,','(assert(A),assert(B)))).
:-(assert(maplist(A,[])),!).
:-(assert(maplist(A,'.'(B,C))),','(!,','(assert(call(A,B)),','(!,assert(maplist(A,C)))))).
:-(assert(A),;(','(call(A),!),throw(assert_failed(A)))).
:-(foldl(A,B,[],B),true).
:-(foldl(C,D,'.'(E,F),G),','(call(C,D,E,H),foldl(C,H,F,G))).
:-(append([],[]),true).
:-(append('.'(A,B),C),','(append(B,D),append(A,D,C))).
:-(comma_list(A,'.'(B,[])),','(var(A),','(!,=(B,A)))).
:-(comma_list(C,'.'(C,[])),','(var(C),!)).
:-(comma_list(','(B,D),E),','(=(E,'.'(B,F)),','(!,','(comma_list(D,F),!)))).
:-(comma_list('()',[]),true).
:-(comma_list(B,G),'.'(B,[],G)).
:-('.'(A,B,'.'(A,B)),true).
:-(map_comma_list(A,B),','(comma_list(B,C),maplist(A,C))).
:-(error_unless(A,B),','(call(A),!)).
:-(error_unless(A,B),throw(error(B))).
:-(error_unless(A),error_unless(A,goal_failed(A))).
:-(xtl_callable(A),;(compound(A),atom(A))).
:-(=...(A,B),','(assert(','(;(xtl_callable(A),','(=(B,'.'(C,D)),atom(C))),list_or_partial_list(B))),','('__contract_free_=...'(A,B),assert(true)))).
:-('__contract_free_=...'(A,B),=..(A,B)).
:-(fib(0,1),true).
:-(fib(1,1),true).
:-(fib(A,B),','(-(A,1,C),','(fib(C,D),','(-(A,2,E),','(fib(E,F),+(D,F,B)))))).
:-(snd(-(A,B),B),true).
:-(pmaplist(A,B),','(var(B),!)).
:-(pmaplist(A,[]),true).
:-(pmaplist(A,'.'(B,C)),','(call(A,B),pmaplist(A,C))).
:-(pmember(A,B),','(var(B),','(!,false))).
:-(pmember(A,[]),','(!,false)).
:-(pmember(A,'.'(A,B)),','(!,true)).
:-(pmember(A,'.'(B,C)),pmember(A,C)).
:-(pinsert(A,B),','(var(B),','(!,=(B,'.'(A,C))))).
:-(pinsert(A,'.'(B,C)),pinsert(A,C)).
:-(plength(A,0),','(var(A),!)).
:-(plength([],0),true).
:-(plength('.'(B,C),D),','(plength(C,E),+(1,E,D))).
:-(filterlist(A,[],[]),true).
:-(filterlist(A,'.'(B,C),D),;(','(call(A,B),','(!,','(filterlist(A,C,E),=(D,'.'(B,E))))),filterlist(A,C,D))).
:-('()',true).
:-(not(A),;(','(call(A),','(!,false)),true)).
:-(orlist(A,[]),false).
:-(orlist(A,'.'(B,C)),;(call(A,B),orlist(A,C))).
:-(read_bytes(A,[]),','(at_end_of_stream(A),!)).
:-(read_bytes(A,'.'(B,C)),','(get_byte(A,B),read_bytes(A,C))).
:-(write_bytes(A,[]),true).
:-(write_bytes(A,'.'(B,C)),','(put_byte(A,B),write_bytes(A,C))).
:-(read_file(A,B),','(assert(atom(A)),','('__contract_free_read_file'(A,B),assert(bytes(B))))).
:-('__contract_free_read_file'(A,B),','(open(A,read,C,'.'(type(binary),'.'(buffering(block),[]))),','(read_bytes(C,B),close(C)))).
:-(write_file(A,B),','(assert(','(ground(A),bytes(B))),','('__contract_free_write_file'(A,B),assert(true)))).
:-('__contract_free_write_file'(A,B),','(open(A,write,C,'.'(type(binary),'.'(buffering(block),[]))),','(write_bytes(C,B),close(C)))).
:-(read_line([]),','(current_input(A),','(at_end_of_stream(A),!))).
:-(read_line('.'(A,B)),','(current_input(C),','(line_count(C,D),','(get_char(E),','(atom_codes(E,'.'(A,[])),;(','(line_count(C,D),read_line(B)),=(B,[]))))))).
:-(getopts([],A),','(!,maplist(getopts_finalize,A))).
:-(getopts('.'(A,'.'(B,C)),D),','(member(option(A,B,E),D),','(!,getopts(C,D)))).
:-(getopts('.'(A,'.'(B,C)),D),','(member(multi(A,E),D),','(!,','(pinsert(B,E),','(!,getopts(C,D)))))).
:-(getopts('.'(A,B),C),','(member(flag(A,true),C),','(!,getopts(B,C)))).
:-(getopts('.'(A,B),C),','(member(argument(A,D),C),','(!,getopts(B,C)))).
:-(getopts_finalize(option(A,B,required)),','(var(B),','(!,throw(missing_option(A))))).
:-(getopts_finalize(option(A,B,default(B))),!).
:-(getopts_finalize(flag(A,false)),!).
:-(getopts_finalize(argument(A,required)),','(var(A),','(!,throw(missing_positional_argument)))).
:-(getopts_finalize(argument(A,default(A))),!).
:-(getopts_finalize(multi(A,B)),','(length(B,C),!)).
:-(getopts_finalize(A),true).
:-(xtl_declaration(define(A,B,C)),','(atom(A),','(maplist(annotation,B),maplist(define_clause,C)))).
:-(xtl_declaration(test(A,B)),','(atom(A),xtl_goal(B))).
:-(xtl_declaration(prolog(/(A,B))),','(atom(A),number(B))).
:-(annotation(nondet),true).
:-(annotation(predicate),true).
:-(annotation(returns(A)),true).
:-(annotation(ensures(A)),xtl_goal(A)).
:-(annotation(requires(A)),xtl_goal(A)).
:-(annotation(dcg),true).
:-(annotation(dcg2),true).
:-(annotation(parameters(A)),maplist(var,A)).
:-(annotation(inline),true).
:-(xtl_goal(A),true).
:-(define_clause(:(A,B)),true).
:-(xtl_apply(A,B,C),;(','(=...(C,'.'('XTL$APPLY','.'(A,'.'(B,[])))),list(A)),','(=...(C,'.'(A,B)),\=(A,'XTL$APPLY')))).
:-(xtl_makevar(A,B),=...(B,'.'('XTL$VARNAME','.'(A,[])))).
:-(xtl_include(A,B),','(log(including(A)),','(read_file(A,C),xtl_include(A,C,B)))).
:-(xtl_include(A,B,C),must(xtl_top_level(C,B,[]))).
:-(xtl_import(A,B,C),','(log(importing(B)),','(must(:=(D,xtlm_imports(C))),','(;(','(pmember(-(B,E),D),','(!,=(F,module(B,E,D)))),','(must(:=(F,xtlm_new(B,D))),','(must(xtl_top_level(F,A,[])),must(xtlm_seal(F))))),','(must(xtlm_import(C,F,inline)),log(imports(D))))))).
:-(xtl_token(A,B,C),','(assert(xtl_callable(A)),','('__contract_free_xtl_token'(A,B,C),assert(true)))).
:-('__contract_free_xtl_token'(A,B,C),','(dcg_call(A,B,D),xtl_skipwhite(D,C))).
:-(xtl_skipwhite(A,B),','(xtl_white(A,C),','(!,=(C,B)))).
:-(xtl_skipwhite(A,B),=(A,B)).
:-(xtl_white(A,B),','(append('.'(37,[]),C,A),','(','(!,=(C,D)),','(xtl_line_comment_(D,E),xtl_skipwhite(E,B))))).
:-(xtl_white(A,B),','(;(append('.'(32,[]),C,A),;(append('.'(9,[]),C,A),;(append('.'(13,[]),C,A),append('.'(10,[]),C,A)))),','(','(!,=(C,D)),xtl_skipwhite(D,B)))).
:-(xtl_line_comment_(A,B),','(;(append('.'(10,[]),C,A),','(=([],[]),peek([],A,C))),','(!,=(C,B)))).
:-(xtl_line_comment_(A,B),','(append('.'(C,[]),D,A),xtl_line_comment_(D,B))).
:-(xtl_top_level(A,B,C),','(assert(module(A)),','('__contract_free_xtl_top_level'(A,B,C),assert(module(A))))).
:-('__contract_free_xtl_top_level'(A,B,C),','(','(log(parsing_top_level),=(B,D)),','(;(','(append('.'(35,'.'(33,[])),E,D),','(','(!,=(E,F)),xtl_line_comment_(F,G))),','(true,=(D,G))),','(xtl_skipwhite(G,H),','(many(xtl_declaration(A),H,I),require(eof,I,C)))))).
:-(xtl_declaration(A,B,C),','(assert(module(A)),','('__contract_free_xtl_declaration'(A,B,C),assert(module(A))))).
:-('__contract_free_xtl_declaration'(A,B,C),','(','(=([],[]),peek([],B,D)),','(','(!,=(D,E)),','(fail,=(E,C))))).
:-('__contract_free_xtl_declaration'(A,B,C),','(require(xtl_expression(pexpr(D)),B,E),','(','(!,=(E,F)),','(','(log(parsed_expression(D)),=(F,G)),','(;(','(=(D,include(H)),','(!,','(=('.'(I,[]),'.'(xtl_include(H,A),[])),catch(I,J,throw_with_trace(J,I))))),;(','(=(D,import(H,K)),','(!,','(read_file(H,L),','(=('.'(M,[]),'.'(xtl_import(L,K,A),[])),catch(M,N,throw_with_trace(N,M)))))),','(!,','(','(=('.'(O,[]),'.'(xtl_makevars(D,P,Q),[])),catch(O,R,throw_with_trace(R,O))),','(!,','(','(=('.'(S,[]),'.'(xtl_term_to_declaration(P,T),[])),catch(S,U,throw_with_trace(U,S))),','(!,','(=('.'(V,[]),'.'(xtlm_add(A,T),[])),catch(V,W,throw_with_trace(W,V)))))))))),=(G,C)))))).
:-(xtl_term_to_declaration(test(:(A,B)),test(A,B)),!).
:-(xtl_term_to_declaration(:(pred(A),','(contract(B,C,D),E)),define(A,'.'(nondet,'.'(predicate,'.'(parameters(F),'.'(requires(C),'.'(ensures(D),[]))))),G)),','(comma_list(E,G),comma_list(B,F))).
:-(xtl_term_to_declaration(:(pred(A),B),define(A,'.'(nondet,'.'(predicate,[])),C)),comma_list(B,C)).
:-(xtl_term_to_declaration(:(dcg(A),','(contract(B,C,D),E)),define(A,'.'(dcg2,'.'(nondet,'.'(predicate,'.'(parameters(F),'.'(requires(C),'.'(ensures(D),[])))))),G)),','(comma_list(E,G),comma_list(B,F))).
:-(xtl_term_to_declaration(:(dcg2(A),','(contract(B,C,D),E)),define(A,'.'(dcg2,'.'(nondet,'.'(predicate,'.'(parameters(F),'.'(requires(C),'.'(ensures(D),[])))))),G)),','(comma_list(E,G),comma_list(B,F))).
:-(xtl_term_to_declaration(:(dcg(A),B),define(A,'.'(dcg2,'.'(nondet,'.'(predicate,[]))),C)),comma_list(B,C)).
:-(xtl_term_to_declaration(:(dcg2(A),B),define(A,'.'(dcg2,'.'(nondet,'.'(predicate,[]))),C)),comma_list(B,C)).
:-(xtl_term_to_declaration(:(fun(A),B),define(A,'.'(nondet,[]),C)),comma_list(B,C)).
:-(xtl_term_to_declaration(:(define(A),B),define(A,C,D)),xtl_split_annots(B,C,D)).
:-(xtl_term_to_declaration(prolog(A),prolog(A)),!).
:-(xtl_term_to_declaration(:(inline(A),B),C),','(xtl_term_to_declaration(:(A,B),D),','(;(=(D,define(E,F,G)),throw(error(cannot_inline_non_define(D)))),','(','(','('.'(inline,[],H),append(F,H,I)),=(C,define(E,I,G))),!)))).
:-(xtl_term_to_declaration(A,B),throw(failed(xtl_term_to_declaration(A)))).
:-(xtl_split_annots(A,B,C),','(comma_list(A,D),','(append(E,C,D),','(maplist(define_clause,C),maplist(xtl_make_annotation,E,B))))).
:-(xtl_make_annotation(A,parameters(B)),','(=...(A,'.'(parameters,B)),!)).
:-(xtl_make_annotation(C,C),true).
:-(xtl_makevars(A,B,C),','(xtl_makevar('_',A),!)).
:-(xtl_makevars(A,B,C),','(xtl_makevar(D,A),','(!,','(member(-(D,B),C),!)))).
:-(xtl_makevars(A,A,B),','(atomic(A),!)).
:-(xtl_makevars('.'(A,B),'.'(C,D),E),','(!,','(xtl_makevars(A,C,E),xtl_makevars(B,D,E)))).
:-(xtl_makevars(A,B,C),','(xtl_apply(D,E,A),','(!,','(xtl_makevars(D,F,C),','(xtl_makevars(E,G,C),xtl_apply(F,G,B)))))).
:-(xtl_atom_char(A,B,C),','(assert(true),','('__contract_free_xtl_atom_char'(A,B,C),assert(number(A))))).
:-('__contract_free_xtl_atom_char'(A,B,C),','(append('.'(A,[]),D,B),','(','(!,=(D,E)),','(member(A,'.'(97,'.'(98,'.'(99,'.'(100,'.'(101,'.'(102,'.'(103,'.'(104,'.'(105,'.'(106,'.'(107,'.'(108,'.'(109,'.'(110,'.'(111,'.'(112,'.'(113,'.'(114,'.'(115,'.'(116,'.'(117,'.'(118,'.'(119,'.'(120,'.'(121,'.'(122,'.'(65,'.'(66,'.'(67,'.'(68,'.'(69,'.'(70,'.'(71,'.'(72,'.'(73,'.'(74,'.'(75,'.'(76,'.'(77,'.'(78,'.'(79,'.'(80,'.'(81,'.'(82,'.'(83,'.'(84,'.'(85,'.'(86,'.'(87,'.'(88,'.'(89,'.'(90,'.'(95,'.'(48,'.'(49,'.'(50,'.'(51,'.'(52,'.'(53,'.'(54,'.'(55,'.'(56,'.'(57,'.'(36,'.'(63,[])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),=(E,C))))).
:-(xtl_atom(A,B,C),','(append('.'(39,[]),D,B),','(xtl_quoted_atom_chars_(E,D,F),','(atom_codes(A,E),=(F,C))))).
:-(xtl_atom(A,B,C),','(many1(xtl_atom_char,D,B,E),','(','(!,=(E,F)),','(','(atom_codes(G,D),','(=(D,'.'(H,I)),;(','(=(H,95),','(!,xtl_makevar('_',A))),;(','(member(H,'.'(65,'.'(66,'.'(67,'.'(68,'.'(69,'.'(70,'.'(71,'.'(72,'.'(73,'.'(74,'.'(75,'.'(76,'.'(77,'.'(78,'.'(79,'.'(80,'.'(81,'.'(82,'.'(83,'.'(84,'.'(85,'.'(86,'.'(87,'.'(88,'.'(89,'.'(90,[]))))))))))))))))))))))))))),','(!,xtl_makevar(G,A))),=(A,G))))),=(F,C))))).
:-(xtl_quoted_char(A,B,C),','(append('.'(92,[]),D,B),','(','(!,=(D,E)),','(require('.'(F,[]),E,G),','(','(member(-(F,A),'.'(-(110,10),'.'(-(114,13),'.'(-(116,9),'.'(-(101,127),'.'(-(H,H),[])))))),=(G,I)),','(!,=(I,C))))))).
:-(xtl_quoted_atom_chars_([],A,B),','(append('.'(39,[]),C,A),','(!,=(C,B)))).
:-(xtl_quoted_atom_chars_('.'(A,B),C,D),','(xtl_quoted_char(A,C,E),','(','(!,=(E,F)),xtl_quoted_atom_chars_(B,F,D)))).
:-(xtl_quoted_atom_chars_('.'(A,B),C,D),','(append('.'(A,[]),E,C),xtl_quoted_atom_chars_(B,E,D))).
:-(xtl_expression(A,B,C),xtl_expression(1201,A,B,C)).
:-(pexpr(pexpr(A),true),true).
:-(xtl_expression(A,B,C,D),xtl_expression(none,A,B,C,D)).
:-(xtl_regular_term(A,B,C),','(append('.'(48,'.'(39,[])),D,B),','(','(!,=(D,E)),','(require(xtl_string_char(A),E,F),xtl_skipwhite(F,C))))).
:-(xtl_regular_term(A,B,C),','(many1(digit,D,B,E),','(','(!,=(E,F)),','(','(','(foldl(add_digit,0,D,A),!),=(F,G)),xtl_skipwhite(G,C))))).
:-(xtl_regular_term(A,B,C),','(append('.'(34,[]),D,B),','(','(!,=(D,E)),','(require(many(xtl_string_char,A),E,F),','(require('.'(34,[]),F,G),xtl_skipwhite(G,C)))))).
:-(xtl_regular_term(A,B,C),','(xtl_atom(D,B,E),','(','(!,=(E,F)),;(','(xtl_token('.'(40,[]),F,G),','(','(!,=(G,H)),','(xtl_comma_separated(I,[],xtl_token('.'(41,[])),H,J),','(xtl_apply(D,I,A),=(J,C))))),','(xtl_skipwhite(F,K),','(=(A,D),=(K,C))))))).
:-(xtl_regular_term('()',A,B),','(xtl_token('.'(40,[]),A,C),','(xtl_token('.'(41,[]),C,D),','(!,=(D,B))))).
:-(xtl_regular_term(A,B,C),','(xtl_token('.'(40,[]),B,D),','(xtl_expression(pexpr(A),D,E),require(xtl_token('.'(41,[])),E,C)))).
:-(xtl_regular_term({}(A),B,C),','(xtl_token('.'(123,[]),B,D),','(xtl_expression(pexpr(A),D,E),require(xtl_token('.'(125,[])),E,C)))).
:-(xtl_regular_term(A,B,C),','(xtl_token('.'(91,[]),B,D),','(xtl_comma_separated(A,E,;(','(xtl_token('.'(93,[])),{}(=(E,[]))),','(xtl_token('.'(124,[])),','(xtl_expression(pexpr(E)),xtl_token('.'(93,[]))))),D,F),','(!,=(F,C))))).
:-(xtl_string_char(A,B,C),','(assert(true),','('__contract_free_xtl_string_char'(A,B,C),assert(byte(A))))).
:-('__contract_free_xtl_string_char'(A,B,C),','(append('.'(34,[]),D,B),','(','(!,=(D,E)),','(false,=(E,C))))).
:-('__contract_free_xtl_string_char'(A,B,C),','(xtl_quoted_char(A,B,D),','(!,=(D,C)))).
:-('__contract_free_xtl_string_char'(A,B,C),append('.'(A,[]),C,B)).
:-(xtl_comma_separated(A,B,C,D,E),xtl_comma_seperated_first(A,B,C,D,E)).
:-(xtl_comma_seperated_first(A,A,B,C,D),','(dcg_call(B,C,E),','(!,=(E,D)))).
:-(xtl_comma_seperated_first('.'(A,B),C,D,E,F),','(xtl_expression(1000,pexpr(A),E,G),','(','(!,=(G,H)),xtl_comma_separated_next(B,C,D,H,F)))).
:-(xtl_comma_separated_next(A,A,B,C,D),','(dcg_call(B,C,E),','(!,=(E,D)))).
:-(xtl_comma_separated_next('.'(A,B),C,D,E,F),','(require(xtl_token('.'(44,[])),E,G),','(','(!,=(G,H)),','(xtl_expression(1000,pexpr(A),H,I),','(','(!,=(I,J)),xtl_comma_separated_next(B,C,D,J,F)))))).
:-(xtl_op_or_term(!,term,A,B),','(append('.'(33,[]),C,A),xtl_skipwhite(C,B))).
:-(xtl_op_or_term(A,B,C,D),','(xtl_regular_term(A,C,E),','(','(!,=(E,F)),;(','(','(xtl_op(G,H,A),=(B,op(G,H))),=(F,D)),','(=(B,term),=(F,D)))))).
:-(xtl_op_or_term(A,B,C,D),','(many1(xtl_op_char,E,C,F),','(','(xtl_known_op(E,A,G,H,F,I),','(=(B,op(G,H)),=(I,J))),xtl_skipwhite(J,D)))).
:-(xtl_known_op(A,B,C,D,E,F),','(','(atom_codes(B,A),','(xtl_op(G,H,B),','(!,xtl_op(C,D,B)))),=(E,F))).
:-(xtl_known_op(A,B,C,D,E,F),','(','(append(G,'.'(H,[]),A),=(E,I)),','(append('.'(H,[]),I,J),xtl_known_op(G,B,C,D,J,F)))).
:-(xtl_op_char(A,B,C),','(append('.'(A,[]),D,B),','(','(member(A,'.'(96,'.'(126,'.'(33,'.'(64,'.'(35,'.'(37,'.'(94,'.'(38,'.'(42,'.'(60,'.'(62,'.'(47,'.'(59,'.'(58,'.'(45,'.'(95,'.'(61,'.'(43,'.'(44,'.'(124,'.'(92,'.'(46,[]))))))))))))))))))))))),=(D,E)),','(!,=(E,C))))).
:-(xtl_expression(none,A,pexpr(B),C,D),','(xtl_op_or_term(E,op(F,G),C,H),','(','(','(member(-(G,I),'.'(-(fx,0),'.'(-(fy,1),[]))),is(J,+(F,I))),=(H,K)),','(try(xtl_expression(none,J,pexpr(L)),K,M),','(','(','('.'(L,[],N),xtl_apply(E,N,O)),=(M,P)),xtl_expression(just(O),A,pexpr(B),P,D)))))).
:-(xtl_expression(none,A,pexpr(B),C,D),','(','(!,=(C,E)),','(require(xtl_op_or_term(F,term),E,G),xtl_expression(just(F),A,pexpr(B),G,D)))).
:-(xtl_expression(just(A),B,pexpr(C),D,E),','(xtl_op_or_term(F,op(G,H),D,I),','(','(','(member(-(H,J),'.'(-(xf,0),'.'(-(yf,1),[]))),','(is(K,+(G,J)),','(<(K,B),','(!,','('.'(A,[],L),xtl_apply(F,L,M)))))),=(I,N)),xtl_expression(just(M),B,pexpr(C),N,E)))).
:-(xtl_expression(just(A),B,pexpr(C),D,E),','(xtl_op_or_term(F,op(G,H),D,I),','(','(','(member(-(-(H,J),K),'.'(-(-(xfx,0),0),'.'(-(-(xfy,0),1),'.'(-(-(yfx,1),0),[])))),','(is(L,+(G,J)),','(<(L,B),','(!,is(M,+(G,K)))))),=(I,N)),','(require(xtl_expression(none,M,pexpr(O)),N,P),','(','(','('.'(O,[],Q),','('.'(A,Q,R),xtl_apply(F,R,S))),=(P,T)),xtl_expression(just(S),B,pexpr(C),T,E)))))).
:-(xtl_expression(just(A),B,pexpr(A),C,D),','(!,=(C,D))).
:-(xtl_op(1200,xfx,:-),true).
:-(xtl_op(1200,xfx,-->),true).
:-(xtl_op(1200,fx,:-),true).
:-(xtl_op(1105,xfy,'|'),true).
:-(xtl_op(1100,xfy,;),true).
:-(xtl_op(1000,xfy,','),true).
:-(xtl_op(900,fy,not),true).
:-(xtl_op(700,xfx,=),true).
:-(xtl_op(700,xfx,\=),true).
:-(xtl_op(700,xfx,=..),true).
:-(xtl_op(700,xfx,==),true).
:-(xtl_op(700,xfx,\==),true).
:-(xtl_op(700,xfx,is),true).
:-(xtl_op(700,xfx,<),true).
:-(xtl_op(700,xfx,>),true).
:-(xtl_op(700,xfx,=<),true).
:-(xtl_op(700,xfx,>=),true).
:-(xtl_op(700,xfx,=\=),true).
:-(xtl_op(500,yfx,+),true).
:-(xtl_op(500,yfx,-),true).
:-(xtl_op(400,yfx,*),true).
:-(xtl_op(400,yfx,/),true).
:-(xtl_op(400,yfx,rem),true).
:-(xtl_op(400,yfx,mod),true).
:-(xtl_op(400,yfx,div),true).
:-(xtl_op(400,yfx,<<),true).
:-(xtl_op(400,yfx,>>),true).
:-(xtl_op(200,xfx,**),true).
:-(xtl_op(200,xfx,^),true).
:-(xtl_op(200,fy,+),true).
:-(xtl_op(200,fy,-),true).
:-(xtl_op(1200,fy,test),true).
:-(xtl_op(999,fx,tc),true).
:-(xtl_op(999,fx,sf),true).
:-(xtl_op(700,xfx,=...),true).
:-(xtl_op(1200,xfy,:),true).
:-(xtl_op(1150,fy,inline),true).
:-(xtl_op(1150,fy,dcg),true).
:-(xtl_op(1150,fy,dcg2),true).
:-(xtl_op(1150,fy,pred),true).
:-(xtl_op(1150,fy,include),true).
:-(xtl_op(1150,fy,fun),true).
:-(xtl_op(1150,fy,define),true).
:-(xtl_op(700,xfx,:=),true).
:-(xtl_op(1125,xfx,if),true).
:-(xtl_op(100,fy,'`'),true).
:-(xtl_op(100,fy,\),true).
:-(xtl_op(100,fy,'@`'),true).
:-(xtl_op(100,fy,@:=),true).
:-(xtl_op(700,fx,:=),true).
:-(xtl_op(50,xfy,'.'),true).
:-(xtl_to_pl_toplevel(A,B),','(maplist(xtl_to_pl_declaration,A,C),','(append(C,D),append('.'(:-(set_prolog_flag(singleton_warning,off)),'.'(:-(discontiguous(/(test,1))),'.'(:-(initialization(;(main,','(write('error: unexpected failure in main'),','(nl,halt(1)))))),[]))),D,B)))).
:-(xtl_to_pl_declaration(A,B),','(assert(','(=(A,-(C,D)),','(module(C),module_declaration(D)))),','('__contract_free_xtl_to_pl_declaration'(A,B),assert(true)))).
:-('__contract_free_xtl_to_pl_declaration'(-(A,B),C),','(log(compiling(B,A)),','(=('.'(D,[]),'.'(must(xtl_to_pl_declaration(A,B,C)),[])),catch(D,E,throw_with_trace(E,D))))).
:-(xtl_to_pl_declaration(A,B,C),','(assert(','(module(A),xtl_declaration(B))),','('__contract_free_xtl_to_pl_declaration'(A,B,C),assert(true)))).
:-('__contract_free_xtl_to_pl_declaration'(A,B,C),','(log(to_pl_declaration(B)),false)).
:-('__contract_free_xtl_to_pl_declaration'(A,test(B,C),'.'(test(:-(B,D)),[])),','(!,','(','(=('.'(E,[]),'.'(xtl_to_pl_goal(A,C,D),[])),catch(E,F,throw_with_trace(F,E))),numbervars(D)))).
:-('__contract_free_xtl_to_pl_declaration'(A,define(B,'.'(nondet,[]),C),D),','(!,','(','(=('.'(E,[]),'.'(maplist(xtl_to_pl_fun(A,B),C,D),[])),catch(E,F,throw_with_trace(F,E))),numbervars(D)))).
:-('__contract_free_xtl_to_pl_declaration'(A,define(B,'.'(nondet,'.'(predicate,C)),D),E),','(!,;(','(;(','(=(C,[]),!),=(C,'.'(inline,[]))),','(!,','(=('.'(F,[]),'.'(maplist(xtl_def_to_pl(A,pred(B)),D,E),[])),catch(F,G,throw_with_trace(G,F))))),','(atom_concat('__contract_free_',B,H),','(','(=('.'(I,[]),'.'(maplist(xtl_def_to_pl(A,pred(H)),D,J),[])),catch(I,K,throw_with_trace(K,I))),','(','(=('.'(L,[]),'.'(xtl_contract_to_pl(A,pred,B,H,C,M),[])),catch(L,N,throw_with_trace(N,L))),append(M,J,E))))))).
:-('__contract_free_xtl_to_pl_declaration'(A,define(B,'.'(dcg2,'.'(nondet,'.'(predicate,C))),D),E),','(!,;(','(;(','(=(C,[]),!),=(C,'.'(inline,[]))),','(!,','(=('.'(F,[]),'.'(maplist(xtl_def_to_pl(A,dcg2(B)),D,E),[])),catch(F,G,throw_with_trace(G,F))))),','(atom_concat('__contract_free_',B,H),','(','(=('.'(I,[]),'.'(maplist(xtl_def_to_pl(A,dcg2(H)),D,J),[])),catch(I,K,throw_with_trace(K,I))),','(','(=('.'(L,[]),'.'(xtl_contract_to_pl(A,dcg2,B,H,C,M),[])),catch(L,N,throw_with_trace(N,L))),append(M,J,E))))))).
:-('__contract_free_xtl_to_pl_declaration'(A,define(B,C,D),E),','(maplist(xtl_annot_prepare,C,F),','(','(=('.'(G,[]),'.'(xtl_define_clauses_to_params(D,H),[])),catch(G,I,throw_with_trace(I,G))),','(foldl(xtl_annot_extend_params,H,F,J),','(xtl_annot_wrap(A,B,J,F,','(K,L)),','(','(=('.'(M,[]),'.'(maplist(xtl_annot_clause_to_pl(A,L,F),D,N),[])),catch(M,O,throw_with_trace(O,M))),append(K,N,E))))))).
:-('__contract_free_xtl_to_pl_declaration'(A,prolog(/(B,C)),[]),!).
:-('__contract_free_xtl_to_pl_declaration'(A,B,C),','(!,throw(error(unknown_declaration(B))))).
:-(xtl_def_to_pl(A,B,C,D),','(log(compiling_clause(B,C)),fail)).
:-(xtl_def_to_pl(A,dcg2(B),:(C,D),:-(E,F)),','(copy_term(-(C,D),-(G,H)),','(comma_list(G,I),','(append(I,'.'(J,'.'(K,[])),L),','(=...(E,'.'(B,L)),','(xtl_to_pl_dcg(A,J,K,H,F),numbervars(-(E,F)))))))).
:-(xtl_def_to_pl(A,pred(B),:(C,D),:-(E,F)),','(copy_term(-(C,D),-(G,H)),','(comma_list(G,I),','(=...(E,'.'(B,I)),','(xtl_to_pl_goal(A,H,F),numbervars(-(E,F))))))).
:-(xtl_to_pl_goal(A,B,call(B)),','(var(B),!)).
:-(xtl_to_pl_goal(A,','(B,C),','(D,E)),','(!,','(xtl_to_pl_goal(A,B,D),xtl_to_pl_goal(A,C,E)))).
:-(xtl_to_pl_goal(A,;(B,C),;(D,E)),','(!,','(xtl_to_pl_goal(A,B,D),xtl_to_pl_goal(A,C,E)))).
:-(xtl_to_pl_goal(A,!,!),!).
:-(xtl_to_pl_goal(A,'prolog$'(B,C,D),','(E,','(=(F,G),H))),','(!,','(atom_concat(C,'-(',I),','(atom_concat(I,D,J),','(atom_concat(J,').',K),','(read_from_atom(K,-(G,H)),','(xtl_to_pl_quoted(A,F,B,L),;(','(comma_list(E,L),','(\=(E,'()'),!)),=(E,true))))))))).
:-(xtl_to_pl_goal(A,:=(B,C),D),','(!,','(xtl_to_pl_quoted(A,E,B,F),','(xtl_to_pl_funexpr(A,E,C,G),','(append(F,G,H),comma_list(D,H)))))).
:-(xtl_to_pl_goal(A,B,C),','(xtl_apply(D,E,B),','(length(E,F),','(;(','(xtlm_find(A,/(/(D,F),G),H),!),throw(not_found(pred,/(D,F),A))),','(maplist(xtl_to_pl_quoted(A),I,E,J),','(append(J,K),','(comma_list(L,K),','(xtl_to_pl_goal_call(A,D,H,I,M),;(','(=(L,'()'),=(C,M)),=(C,','(L,M))))))))))).
:-(xtl_to_pl_goal_call(A,B,define(C,D,E),F,G),','(member(inline,D),','(!,','(maplist(copy_term,E,H),','(maplist(xtl_inline_pred_clause(F),H,I,J),','(maplist(xtl_to_pl_goal(A),J,K),','(maplist(pl_comma,I,K,L),semicolon_list(G,L)))))))).
:-(xtl_to_pl_goal_call(A,B,C,D,E),=...(E,'.'(B,D))).
:-(pl_comma(A,B,','(A,B)),true).
:-(xtl_inline_pred_clause(A,:(B,C),D,E),','(=(E,C),','(comma_list(B,F),=(D,=(F,A))))).
:-(semicolon_list(false,[]),true).
:-(semicolon_list(;(A,B),'.'(A,'.'(C,D))),','(!,semicolon_list(B,'.'(C,D)))).
:-(semicolon_list(A,'.'(A,[])),true).
:-(xtl_to_pl_dcg(A,B,C,D,dcg_call(D,B,C)),','(var(D),!)).
:-(xtl_to_pl_dcg(A,B,C,','(D,E),','(F,G)),','(!,','(xtl_to_pl_dcg(A,B,H,D,F),xtl_to_pl_dcg(A,H,C,E,G)))).
:-(xtl_to_pl_dcg(A,B,C,;(D,E),;(F,G)),','(!,','(xtl_to_pl_dcg(A,B,C,D,F),xtl_to_pl_dcg(A,B,C,E,G)))).
:-(xtl_to_pl_dcg(A,B,C,!,','(!,=(B,C))),!).
:-(xtl_to_pl_dcg(A,B,C,[],=(B,C)),!).
:-(xtl_to_pl_dcg(A,B,C,'.'(D,E),append('.'(D,E),C,B)),!).
:-(xtl_to_pl_dcg(A,B,C,{}(D),','(E,=(B,C))),','(!,xtl_to_pl_goal(A,D,E))).
:-(xtl_to_pl_dcg(A,B,C,D,E),','(!,','(xtl_apply(F,G,D),','(','(length(G,H),+(H,2,I)),;(','(xtlm_find(A,/(/(F,I),J),K),','(!,','(maplist(xtl_to_pl_quoted(A),L,G,M),','(xtl_to_pl_dcg_call(A,F,K,L,B,C,N),','(append(M,O),;(','(=(O,[]),','(!,=(E,N))),','(comma_list(P,O),=(E,','(P,N))))))))),;(','(','(-(I,2,Q),xtlm_find(A,/(/(F,Q),R),S)),','(xtl_to_pl_goal(A,D,T),=(E,','(=(B,C),T)))),throw(not_found(dcg,/(F,I))))))))).
:-(xtl_to_pl_dcg(A,B,C,D,E),throw(error(xtl_to_pl_dcg,D))).
:-(xtl_to_pl_dcg_call(A,B,define(C,D,E),F,G,H,I),','(member(inline,D),','(!,;(','(member(dcg2,D),','(!,','(maplist(copy_term,E,J),','(maplist(xtl_inline_dcg_clause(F),J,K,L),','(maplist(xtl_to_pl_dcg(A,G,H),L,M),','(maplist(pl_comma,K,M,N),semicolon_list(I,N))))))),','(','('.'(H,[],O),','('.'(G,O,P),append(F,P,Q))),xtl_to_pl_goal_call(A,B,define(C,D,E),Q,I)))))).
:-(xtl_to_pl_dcg_call(A,B,C,D,E,F,G),','(append('.'(B,D),'.'(E,'.'(F,[])),H),=...(G,H))).
:-(xtl_inline_dcg_clause(A,:(B,C),D,E),','(=(E,C),','(comma_list(B,F),=(D,=(F,A))))).
:-(xtl_contract_to_pl(A,pred,B,C,D,'.'(E,[])),','(member(parameters(F),D),','(!,','(;(member(requires(G),D),=(G,true)),','(!,','(;(member(ensures(H),D),=(H,true)),','(!,','(=...(I,'.'(B,F)),','(xtl_to_pl_goal(A,G,J),','(xtl_to_pl_goal(A,H,K),','(=...(L,'.'(C,F)),','(=(M,:-(I,','(assert(G),','(L,assert(H))))),','(copy_term(M,E),numbervars(E)))))))))))))).
:-(xtl_contract_to_pl(A,dcg2,B,C,'.'(parameters(D),'.'(requires(E),'.'(ensures(F),G))),H),','(append(D,'.'(I,'.'(J,[])),K),xtl_contract_to_pl(A,pred,B,C,'.'(parameters(K),'.'(requires(E),'.'(ensures(F),[]))),H))).
:-(xtl_to_pl_fun(A,B,:(C,D),:-(E,F)),','(comma_list(C,G),','(=...(H,'.'(B,G)),','(append(G,'.'(I,[]),J),','(=...(E,'.'(B,J)),','(','(=('.'(K,[]),'.'(xtl_to_pl_funexpr(A,I,D,L),[])),catch(K,M,throw_with_trace(M,K))),;(','(=(L,[]),=(F,true)),comma_list(F,L)))))))).
:-(xtl_to_pl_funexpr(A,B,B,[]),','(var(B),!)).
:-(xtl_to_pl_funexpr(A,B,if(B,C),'.'(D,[])),','(!,','(=('.'(E,[]),'.'(xtl_to_pl_goal(A,C,D),[])),catch(E,F,throw_with_trace(F,E))))).
:-(xtl_to_pl_funexpr(A,B,B,[]),','(number(B),!)).
:-(xtl_to_pl_funexpr(A,B,B,[]),','(atom(B),!)).
:-(xtl_to_pl_funexpr(A,[],[],[]),true).
:-(xtl_to_pl_funexpr(A,'.'(B,C),'.'(D,E),F),','(=('.'(G,[]),'.'(:=(F,append(xtl_to_pl_funexpr(A,B,D),xtl_to_pl_funexpr(A,C,E))),[])),catch(G,H,throw_with_trace(H,G)))).
:-(xtl_to_pl_funexpr(A,B,'`'(C),D),','(=('.'(E,[]),'.'(:=(D,xtl_to_pl_quoted(A,B,C)),[])),catch(E,F,throw_with_trace(F,E)))).
:-(xtl_to_pl_funexpr(A,B,'@`'(C),D),','(=('.'(E,[]),'.'(:=(D,xtl_to_pl_xtlquote(A,B,C)),[])),catch(E,F,throw_with_trace(F,E)))).
:-(xtl_to_pl_funexpr(A,B,C,D),','(xtl_apply(E,F,C),','(!,','(','(length(F,G),+(G,1,H)),','(;(','(','(=('.'(I,[]),'.'(xtlm_find(A,/(/(E,H),J),K),[])),catch(I,L,throw_with_trace(L,I))),!),throw(not_found(fun,/(E,H)))),','(','(=('.'(M,[]),'.'(maplist(xtl_to_pl_funexpr(A),N,F,O),[])),catch(M,P,throw_with_trace(P,M))),','(append(O,Q),','(append(N,'.'(B,[]),R),','(=...(S,'.'(E,R)),append(Q,'.'(S,[]),D)))))))))).
:-(xtl_to_pl_quoted(A,B,C,[]),','(var(C),','(!,=(B,C)))).
:-(xtl_to_pl_quoted(A,B,\(C),D),','(!,xtl_to_pl_quoted(A,B,C,D))).
:-(xtl_to_pl_quoted(A,B,:=(C),D),','(!,xtl_to_pl_funexpr(A,B,C,D))).
:-(xtl_to_pl_quoted(A,B,B,[]),','(number(B),!)).
:-(xtl_to_pl_quoted(A,B,B,[]),','(atom(B),!)).
:-(xtl_to_pl_quoted(A,B,C,D),','(xtl_apply(E,F,C),','(!,','(maplist(xtl_to_pl_quoted(A),G,F,H),','(append(H,D),=...(B,'.'(E,G))))))).
:-(xtl_to_pl_xtlquote(A,B,C,[]),','(var(C),','(!,xtl_makevar(C,B)))).
:-(xtl_to_pl_xtlquote(A,B,B,[]),','(number(B),!)).
:-(xtl_to_pl_xtlquote(A,B,B,[]),','(atom(B),!)).
:-(xtl_to_pl_xtlquote(A,B,@:=(C),D),','(!,xtl_to_pl_funexpr(A,B,C,D))).
:-(xtl_to_pl_xtlquote(A,B,C,D),','(xtl_apply(E,F,C),','(!,','(maplist(xtl_to_pl_xtlquote(A),G,F,H),','(append(H,D),xtl_apply(E,G,B)))))).
:-(:=(A,B),call(B,A)).
:-(xtl_define_clauses_to_params('.'(:(A,B),C),append(D,'.'(E,[]))),','(comma_list(A,F),','(length(F,G),length(D,G)))).
:-(xtl_annot_prepare(A,A),true).
:-(xtl_annot_extend_params(A,predicate,B),append(B,'.'(C,[]),A)).
:-(xtl_annot_extend_params(A,dcg2,D),','('.'(E,[],F),','('.'(G,F,H),append(A,H,D)))).
:-(xtl_annot_extend_params(A,I,A),true).
:-(xtl_annot_wrap_maybe(A,B,C,D,E),;(','(xtl_annot_should_wrap(D),xtl_annot_wrap(A,B,C,D,E)),=(E,','([],B)))).
:-(xtl_annot_should_wrap('.'(requires(A),B)),!).
:-(xtl_annot_should_wrap('.'(ensures(A),B)),!).
:-(xtl_annot_should_wrap('.'(A,B)),xtl_annot_should_wrap(B)).
:-(xtl_annot_wrap(A,B,C,D,'`'(','(E,:=(F)))),','(atom_concat('__wrap_',B,F),','(=(G,parameters(C)),','(;(','(member(G,D),=(H,D)),=(H,'.'(G,D))),xtl_contract_to_pl(A,pred,B,F,H,E))))).
:-(xtl_annot_clause_to_pl(A,B,C,D,E),;(','(member(dcg2,C),','(!,maplist(xtl_def_to_pl(A,dcg2(B)),D,E))),;(','(member(predicate,C),','(!,maplist(xtl_def_to_pl(A,pred(B)),D,E))),maplist(xtl_to_pl_fun(A,B),D,E)))).
:-(pl_write_top_level([],A,B),=(A,B)).
:-(pl_write_top_level('.'(A,B),C,D),','(pl_write_term(A,C,E),','(append('.'(46,'.'(10,[])),F,E),pl_write_top_level(B,F,D)))).
:-(pl_write_term(A,B,C),','(','(','(open_output_codes_stream(D),','(write_term(D,A,'.'(quoted(true),'.'(namevars(true),'.'(numbervars(true),'.'(ignore_ops(true),[]))))),close_output_codes_stream(D,E))),=(B,F)),dcg_call(E,F,C))).
:-(module(module(A,B,C)),name(A)).
:-(module_item(-(A,B)),','(module_key(A),module_declaration(B))).
:-(module_key(/(/(A,B),C)),','(name(A),','(;(number(B),member(B,'.'(-,[]))),maplist(module_attribute,C)))).
:-(module_attribute(A),member(A,'.'(test,'.'(pred,'.'(dcg2,'.'(fun,'.'(inline,[]))))))).
:-(module_declaration(imported(A,B)),','(!,','(name(A),name(B)))).
:-(module_declaration(prolog(/(A,B))),','(!,','(atom(A),number(B)))).
:-(module_declaration(A),xtl_declaration(A)).
:-(name(name(A)),','(maplist(atom,A),','(=('.'(B,[]),'.'(length(A,1),[])),;(','(call(B),','(!,false)),true)))).
:-(name(A),atom(A)).
:-(name_list(name(A),A),','(','(=('.'(B,[]),'.'(not(=(A,'.'(C,[]))),[])),catch(B,D,throw_with_trace(D,B))),!)).
:-(name_list(A,'.'(A,[])),','(=('.'(B,[]),'.'(atom(A),[])),catch(B,C,throw_with_trace(C,B)))).
:-(concat_name(A,B,C),','(','(name_list(A,D),','(name_list(B,E),append(D,E,F))),name_list(C,F))).
:-(xtlm_new(A,B),=(B,module(A,C,'.'(-(A,C),D)))).
:-(xtlm_new(A,B,C),','(;(','(pmember(-(A,D),B),throw(error(already_imported(A)))),true),','(pinsert(-(A,E),B),=(C,module(A,E,B))))).
:-(xtlm_find(A,/(/(B,C),D),E),','(xtlm_find_(A,-(/(/(B,C),D),F)),copy_term(F,E))).
:-(xtlm_find_(module(A,B,C),D),pmember(D,B)).
:-(xtlm_add(A,B),','(xtlm_declaration_key(B,/(/(C,D),E)),;(','(xtlm_find(A,/(/(C,D),F),G),throw(conflicting_declaration(existing(G),new(/(C,D),F,B)))),','(log(adding_declaration(/(/(C,D),E))),xtlm_add_(A,/(/(C,D),E),B))))).
:-(xtlm_add_(module(A,B,C),D,E),;(pinsert(-(D,E),B),throw(error('xtlm_add_: module is already sealed')))).
:-(xtlm_declaration_key(prolog(/(A,B)),/(/(A,B),'.'(pred,[]))),true).
:-(xtlm_declaration_key(define(A,B,C),D),','(!,','(=(C,'.'(:(E,F),G)),;(','(member(dcg2,B),','(!,','(comma_list(E,H),','(length(H,I),','(is(J,+(2,I)),=(D,/(/(A,J),'.'(dcg2,[])))))))),;(','(member(predicate,B),','(!,','(comma_list(E,H),','(length(H,J),=(D,/(/(A,J),'.'(pred,[]))))))),','(!,','(comma_list(E,H),','(length(H,I),','(is(J,+(1,I)),=(D,/(/(A,J),'.'(fun,[])))))))))))).
:-(xtlm_declaration_key(test(A,B),/(/(A,-),'.'(test,[]))),!).
:-(xtlm_declaration_key(A,B),throw(error(unsuported_declaration(A)))).
:-(xtlm_seal(module(A,B,C)),must(length(B,D))).
:-(xtlm_import(A,B,C),','(must(=(B,module(D,E,F))),','(must(=(A,module(G,H,F))),','(must(;(','(=(C,qualified),','(!,=(I,D))),;(','(=(C,as(I)),!),','(=(C,inline),=(I,name([])))))),maplist(must(xtlm_add_import_(A,I,D)),E))))).
:-(xtlm_add_import_(A,B,C,-(D,E)),','(must(=(/(/(F,G),H),D)),','(must(:=(I,concat_name(B,F))),must(xtlm_add_(A,/(/(I,G),H),imported(C,D)))))).
:-(xtlm_zip_module_(A,B,C),=(C,-(A,B))).
:-(xtl_want_declaration(true,test(A,B)),','(!,false)).
:-(xtl_want_declaration(A,B),xtl_declaration(B)).
:-(xtlm_all_declarations_(A,B,-(C,D),E),','(maplist(snd,D,F),','(filterlist(xtl_want_declaration(B),F,G),','(=(H,module(C,D,A)),maplist(xtlm_zip_module_(H),G,E))))).
:-(xtlm_all_declarations_recursive(A,B,C),','(=(module(D,E,F),A),','(length(F,G),','(maplist(xtlm_all_declarations_(F,B),F,H),','(;(','(=(B,true),','(!,=(I,'.'(-(A,test(disabled,t(unit_tests_disabled))),[])))),=(I,[])),append('.'(I,H),C)))))).
:-(xtlm_imports(module(A,B,C),C),true).
:-(xtlm_find_import(module(A,B,C),D,module(D,E,C)),pmember(C,-(D,E))).
:-(xtl_eval_funexpr(A,B,C),','(assert(module(A)),','('__contract_free_xtl_eval_funexpr'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_funexpr'(A,B,C),','(;(var(B),;(number(B),atom(B))),','(!,=(C,B)))).
:-('__contract_free_xtl_eval_funexpr'(A,if(B,C),D),','(!,','(xtl_eval_goal(A,C),=(D,B)))).
:-('__contract_free_xtl_eval_funexpr'(A,'.'(B,C),'.'(D,E)),','(!,','(xtl_eval_funexpr(A,B,D),xtl_eval_funexpr(A,C,E)))).
:-('__contract_free_xtl_eval_funexpr'(A,'@`'(B),C),','(!,xtl_eval_xtlquote(A,B,C))).
:-('__contract_free_xtl_eval_funexpr'(A,B,C),','(xtl_apply(D,E,B),','(','(length(E,F),+(F,1,G)),','(;(','(xtlm_find(A,/(/(D,G),H),I),!),throw(error(not_found(/(D,G))))),','(maplist(xtl_eval_funexpr(A),E,J),','(!,','(','('.'(C,[],K),append(J,K,L)),xtl_eval_call(A,I,L)))))))).
:-(xtl_eval_goal(A,B),','(assert(','(not(var(B)),module(A))),','('__contract_free_xtl_eval_goal'(A,B),assert(true)))).
:-('__contract_free_xtl_eval_goal'(A,','(B,C)),','(!,','(xtl_eval_goal(A,B),xtl_eval_goal(A,C)))).
:-('__contract_free_xtl_eval_goal'(A,;(B,C)),','(!,;(xtl_eval_goal(A,B),xtl_eval_goal(A,C)))).
:-('__contract_free_xtl_eval_goal'(A,!),','(!,throw(not_supported(!)))).
:-('__contract_free_xtl_eval_goal'(A,:=(B,C)),','(!,xtl_eval_funexpr(A,C,B))).
:-('__contract_free_xtl_eval_goal'(A,'prolog$'(B,C,D)),','(!,','(atom_concat(C,'-(',E),','(atom_concat(E,D,F),','(atom_concat(F,').',G),','(read_from_atom(G,-(H,I)),','(xtl_eval_quoted(A,B,H),call(I)))))))).
:-('__contract_free_xtl_eval_goal'(A,B),','(xtl_apply(C,D,B),','(length(D,E),','(;(','(xtlm_find(A,/(/(C,E),F),G),!),throw(error(not_found(/(C,E))))),','(maplist(xtl_eval_quoted(A),D,H),xtl_eval_call(A,G,H)))))).
:-(xtl_eval_quoted(A,B,C),','(assert(module(A)),','('__contract_free_xtl_eval_quoted'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_quoted'(A,B,C),','(;(var(B),;(atom(B),number(B))),','(!,=(C,B)))).
:-('__contract_free_xtl_eval_quoted'(A,'`'(B),C),','(!,xtl_eval_funexpr(A,B,C))).
:-('__contract_free_xtl_eval_quoted'(A,\(B),C),','(!,','(xtl_eval_quoted(A,B,D),=(C,'`'(xtl_eval_lambda(A,D)))))).
:-('__contract_free_xtl_eval_quoted'(A,B,C),','(xtl_apply(D,E,B),','(maplist(xtl_eval_quoted(A),E,F),xtl_apply(D,F,C)))).
:-(xtl_eval_lambda(contract(','(A,','(B,C)),','(module(A),xtl_callable(B)),true),A,B,C),','(=...(B,D),','(','(','('.'(C,[],E),append(D,E,F)),=...(G,F)),xtl_eval_goal(A,G)))).
:-(xtl_eval_lambda(contract(','(A,','(B,','(C,D))),','(module(A),xtl_callable(B)),true),A,B,C,D),','(=...(B,E),','(','(','('.'(D,[],F),','('.'(C,F,G),append(E,G,H))),=...(I,H)),xtl_eval_goal(A,I)))).
:-(xtl_eval_lambda(contract(','(A,','(B,','(C,','(D,E)))),','(module(A),xtl_callable(B)),true),A,B,C,D,E),','(=...(B,F),','(','(','('.'(E,[],G),','('.'(D,G,H),','('.'(C,H,I),append(F,I,J)))),=...(K,J)),xtl_eval_goal(A,K)))).
:-(xtl_eval_xtlquote(A,B,C),','(assert(module(A)),','('__contract_free_xtl_eval_xtlquote'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_xtlquote'(A,B,C),','(;(var(B),;(number(B),atom(B))),','(!,=(C,B)))).
:-('__contract_free_xtl_eval_xtlquote'(A,@:=(B),C),xtl_eval_funexpr(A,B,C)).
:-('__contract_free_xtl_eval_xtlquote'(A,B,C),','(xtl_apply(D,E,B),','(maplist(xtl_eval_xtlquote(A),E,F),','(xtl_eval_xtlquote(A,D,G),xtl_apply(G,F,C))))).
:-(xtl_eval_dcg(A,B,C,D),','(assert(','(not(var(B)),module(A))),','('__contract_free_xtl_eval_dcg'(A,B,C,D),assert(true)))).
:-('__contract_free_xtl_eval_dcg'(A,','(B,C),D,E),','(xtl_eval_dcg(A,B,D,F),xtl_eval_dcg(A,C,F,E))).
:-('__contract_free_xtl_eval_dcg'(A,','(B,C),D,E),;(xtl_eval_dcg(A,B,D,E),xtl_eval_dcg(A,C,D,E))).
:-('__contract_free_xtl_eval_dcg'(A,!,B,C),throw(error(not_cupported(!)))).
:-('__contract_free_xtl_eval_dcg'(A,[],B,B),true).
:-('__contract_free_xtl_eval_dcg'(A,'.'(B,C),D,E),append('.'(B,C),E,D)).
:-('__contract_free_xtl_eval_dcg'(A,{}(B),C,D),xtl_eval_goal(A,B)).
:-('__contract_free_xtl_eval_dcg'(A,B,C,D),','(xtl_apply(E,F,B),','(','(length(F,G),+(G,2,H)),','(maplist(xtl_eval_quoted(A),F,I),;(','(xtlm_find(A,/(/(E,H),J),K),','(!,','(','('.'(D,[],L),','('.'(C,L,M),append(I,M,N))),xtl_eval_call(A,K,N)))),;(','(','(-(H,2,O),xtlm_find(A,/(/(E,O),P),K)),','(append(I,Q),xtl_eval_call(A,K,Q))),throw(error(not_found(/(E,H)))))))))).
:-(xtl_eval_call(A,B,C),','(assert(','(module(A),','(module_declaration(B),list(C)))),','('__contract_free_xtl_eval_call'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_call'(A,prolog(/(B,C)),D),','(assert(length(D,C)),','(xtl_apply(B,D,E),call(E)))).
:-('__contract_free_xtl_eval_call'(A,imported(B,C),D),','(xtlm_find_import(A,B,E),','(xtlm_find(E,C,F),xtl_eval_call(A,F,D)))).
:-('__contract_free_xtl_eval_call'(A,test(B),C),throw(error(not_callable(test(B))))).
:-('__contract_free_xtl_eval_call'(A,define(B,C,D),E),','(copy_term(D,F),;(','(member(dcg2,C),','(!,orlist(xtl_eval_call_dcg(A,E),F))),;(','(member(predicate,C),','(!,orlist(xtl_eval_call_pred(A,E),F))),orlist(xtl_eval_call_fun(A,E),F))))).
:-(xtl_eval_call_pred(A,B,C),','(assert(','(module(A),','(list(B),define_clause(C)))),','('__contract_free_xtl_eval_call_pred'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_call_pred'(A,B,:(C,D)),','(comma_list(C,B),xtl_eval_goal(A,D))).
:-(xtl_eval_call_fun(A,B,C),','(assert(','(module(A),','(list(B),define_clause(C)))),','('__contract_free_xtl_eval_call_fun'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_call_fun'(A,B,:(C,D)),','(append(E,'.'(F,[]),B),','(comma_list(C,E),xtl_eval_funexpr(A,D,F)))).
:-(xtl_eval_call_dcg(A,B,C),','(assert(','(module(A),','(list(B),define_clause(C)))),','('__contract_free_xtl_eval_call_dcg'(A,B,C),assert(true)))).
:-('__contract_free_xtl_eval_call_dcg'(A,B,:(C,D)),','(append(E,'.'(F,'.'(G,[])),B),','(comma_list(C,E),xtl_eval_dcg(A,D,F,G)))).
:-(main,catch(','(current_prolog_flag(argv,A),;(','(=(A,'.'(B,'.'(C,D))),','(!,','(command(C,D),halt))),','(command(help,[]),halt(1)))),E,','(write('failed: '),','(print_exception(E),halt(1))))).
:-(command(help,A),','(!,','(write('extol repl'),','(nl,','(write('    Invoke the interactive REPL'),','(nl,','(write('extol extoltoprolog <in.xtl> <out.pl> [--slim] [--inject <other.xtl>]...'),','(nl,','(write('    Convert the input for to prolog. Use "--slim" to remove tests for bootstrapping'),','(nl,','(write('extol test [test-name]'),','(nl,','(write('    Run all built-in unit tests or, if present, just the named test'),','(nl,','(write('extol eval-tests <in.xtl> [test-name]'),','(nl,','(write('    Eval all tests or, if present, just the named test'),','(nl,','(write('extol eval "expression" [--load <path>]...'),','(nl,','(write('    Load the given files, evaluate the expression and print its result'),nl))))))))))))))))))))).
:-(command(test,A),','(!,;(','(test(:-(B,C)),','(;(=('.'(B,[]),A),=(A,[])),','(write('[  ] + '),','(write(B),','(write(': '),','(once(run_test(C)),fail)))))),true))).
:-(command(extoltoprolog,A),','(!,','(getopts(A,'.'(multi('--inject',B),'.'(multi('--inject-prolog',C),'.'(flag('--slim',D),'.'(argument(E,required),'.'(argument(F,required),[])))))),','(!,','(load_main(E,B,G),','(must(xtlm_all_declarations_recursive(G,D,H)),','(','(length(H,I),log(listed(I))),','(log(decls_new(H)),','(must(xtl_to_pl_toplevel(H,J)),','(','(length(J,K),log(translated(K))),','(must(pl_write_top_level(J,L,[])),','(!,','(maplist(read_file,C,M),','(must(append('.'('.'(37,'.'(32,'.'(71,'.'(101,'.'(110,'.'(101,'.'(114,'.'(97,'.'(116,'.'(101,'.'(100,'.'(32,'.'(98,'.'(121,'.'(32,'.'(101,'.'(120,'.'(116,'.'(111,'.'(108,'.'(116,'.'(111,'.'(112,'.'(114,'.'(111,'.'(108,'.'(111,'.'(103,'.'(10,[]))))))))))))))))))))))))))))),'.'(L,M)),N)),must(write_file(F,N)))))))))))))))).
:-(command('eval-tests','.'(A,[])),','(!,','(load_main(A,[],B),','(!,','(must(xtlm_all_declarations_recursive(B,true,C)),','(!,eval_tests(C))))))).
:-(command(repl,[]),','(!,xtl_repl)).
:-(command(eval,A),','(!,','(getopts(A,'.'(argument(B,required),'.'(multi('--load',C),[]))),xtl_command_eval(C,B)))).
:-(command(A,B),','(write(unknown_command(A)),','(nl,false))).
:-(eval_tests(A),maplist(eval_test_decl,A)).
:-(eval_test_decl(-(A,test(B,C))),','(!,','(write('[ E] + '),','(write(B),','(write(': '),eval_test(A,C)))))).
:-(eval_test_decl(A),true).
:-(eval_test(A,done),','(!,','(write(success),nl))).
:-(eval_test(A,B),','(=(B,','(skip_test(eval),C)),','(!,','(write(skip),nl)))).
:-(eval_test(A,B),','(=(B,','(C,D)),','(!,','(log(eval_test_goal(C)),;(','(xtl_eval_goal(A,C),','(!,eval_test(A,D))),','(nl,','(write('  failed: '),','(write_term(C,'.'(numbervars(false),'.'(namevars(false),'.'(max_depth(7),[])))),','(nl,fail))))))))).
:-(eval_test(A,B),eval_test(A,','(B,done))).
:-(load_injects([],A),true).
:-(load_injects('.'(A,B),C),','(must(xtl_include(A,C)),load_injects(B,C))).
:-(load_main(A,B,C),','(xtlm_new(main,C),','(xtl_include_prelude(C),','(!,','(log(revving),','(load_injects(B,C),','(must(xtl_include(A,C)),','(must(xtlm_seal(C)),log(parsed))))))))).
:-(skip_test(A),true).
:-(run_test(done),','(!,','(write(success),nl))).
:-(run_test(skip_test(compiled)),','(!,','(write(skip),nl))).
:-(run_test(','(A,B)),','(!,;(','(','(=('.'(C,[]),'.'(A,[])),catch(C,D,throw_with_trace(D,C))),','(!,run_test(B))),','(nl,','(write('  failed: '),','(write_term(A,'.'(numbervars(false),'.'(namevars(false),'.'(max_depth(7),[])))),','(nl,throw(test_failed)))))))).
:-(run_test(A),run_test(','(A,done))).
:-(xtl_repl,','(xtlm_new(repl,A),','(xtl_include_prelude(A),','(!,xtl_repl(A))))).
:-(xtl_repl(A),','(write('Extol> '),','(flush_output,','(read_line(B),','(;(=(B,'.'(10,[])),;(','(=(B,[]),','(write(end),halt)),;(catch(','(;(xtl_expression(pexpr(C),B,[]),throw('parse failed')),','(xtl_makevars(C,D,E),','(xtl_eval_funexpr(A,D,F),','(write(F),nl)))),G,','(write('failed: '),print_exception(G))),','(write(error),nl)))),','(!,xtl_repl(A))))))).
:-(xtl_repl(A),','(write(end),nl)).
:-(xtl_command_eval_include(A,B),xtl_include(B,A)).
:-(xtl_command_eval(A,B),','(xtlm_new(eval,C),','(xtl_include_prelude(C),','(!,','(maplist(xtl_command_eval_include(C),A),','(atom_codes(B,D),','(xtl_expression(pexpr(E),D,[]),','(xtl_makevars(E,F,G),','(xtl_eval_funexpr(C,F,H),','(write(H),nl)))))))))).
:-(xtl_include_prelude(A),','(log('TODO including prelude'),','(xtl_include('/home/atnnn/code/extol/src/prelude/prelude.xtl',A),log(A)))).
